AWSTemplateFormatVersion: "2010-09-09"

Metadata:
  IamRequirements: CAPABILITY_NAMED_IAM

Parameters:
  CIDRPrefix:
    Type: String
    Description: VPC Fixed CIDR Prefix e.g. 10.1
    Default: "10.0"

Resources:

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Sub ${CIDRPrefix}.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default

  NetworkAclPrivate:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref VPC

  NetworkAclPublic:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref VPC

  RouteTablePrivate:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC

  RouteTablePublic:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC

  AwsVpcPrivateHostedZone:
    Type: "AWS::Route53::HostedZone"
    Properties:
      Name: aws.vpc
      VPCs:
        - VPCId: !Ref VPC
          VPCRegion: !Ref "AWS::Region"

  NetworkAclEntryInPrivateAllowVpc:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: "0.0.0.0/0"
      Egress: false
      NetworkAclId: !Ref NetworkAclPrivate
      Protocol: -1
      RuleAction: allow
      RuleNumber: 99

  NetworkAclEntryInPublicAllowAll:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: "0.0.0.0/0"
      Egress: false
      NetworkAclId: !Ref NetworkAclPublic
      Protocol: -1
      RuleAction: allow
      RuleNumber: 99

  NetworkAclEntryOutPrivateAllowVpc:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: "0.0.0.0/0"
      Egress: true
      NetworkAclId: !Ref NetworkAclPrivate
      Protocol: -1
      RuleAction: allow
      RuleNumber: 99

  NetworkAclEntryOutPublicAllowAll:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: "0.0.0.0/0"
      Egress: true
      NetworkAclId: !Ref NetworkAclPublic
      Protocol: -1
      RuleAction: allow
      RuleNumber: 99

  SubnetAPrivate:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}a"
      CidrBlock: !Sub ${CIDRPrefix}.16.0/20
      VpcId: !Ref VPC

  SubnetAPublic:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}a"
      CidrBlock: !Sub ${CIDRPrefix}.0.0/20
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC

  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  RouteTablePublicInternetRoute:
    Type: "AWS::EC2::Route"
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTablePublic

  RouteTableAssociationAPrivate:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref SubnetAPrivate

  RouteTableAssociationAPublic:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetAPublic

  SubnetNetworkAclAssociationAPrivate:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      SubnetId: !Ref SubnetAPrivate

  SubnetNetworkAclAssociationAPublic:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      SubnetId: !Ref SubnetAPublic

  EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  NATGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      SubnetId: !Ref SubnetAPublic

  RouteNATGateway:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NATGateway
